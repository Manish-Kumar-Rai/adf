{
	"name": "df16JoinTransformation",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_lookupSales",
						"type": "DatasetReference"
					},
					"name": "ReadSales"
				},
				{
					"dataset": {
						"referenceName": "ds_lookupProducts",
						"type": "DatasetReference"
					},
					"name": "ReadProducts"
				},
				{
					"dataset": {
						"referenceName": "ds_lookupCustomer",
						"type": "DatasetReference"
					},
					"name": "ReadCustomers"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_asqlJoin",
						"type": "DatasetReference"
					},
					"name": "sinkJoin"
				}
			],
			"transformations": [
				{
					"name": "joinProducts"
				},
				{
					"name": "joinCustomers"
				}
			],
			"scriptLines": [
				"source(output(",
				"          ProductKey as short,",
				"          CustomerKey as short,",
				"          SalesAmount as double",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> ReadSales",
				"source(output(",
				"          ProductKey as short,",
				"          EnglishProductName as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> ReadProducts",
				"source(output(",
				"          CustomerKey as short,",
				"          FullName as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> ReadCustomers",
				"ReadSales, ReadProducts join(ReadSales@ProductKey == ReadProducts@ProductKey,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinProducts",
				"joinProducts, ReadCustomers join(ReadSales@CustomerKey == ReadCustomers@CustomerKey,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinCustomers",
				"joinCustomers sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          ProductKey = ReadSales@ProductKey,",
				"          CustomerKey = ReadSales@CustomerKey,",
				"          SalesAmount,",
				"          EnglishProductName,",
				"          FullName",
				"     )) ~> sinkJoin"
			]
		}
	}
}