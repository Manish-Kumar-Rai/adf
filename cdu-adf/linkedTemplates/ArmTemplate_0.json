{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "cdu-adf"
		},
		"ls_localFile_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'ls_localFile'"
		},
		"ls_ASQLKey_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://adfLearning.vault.azure.net/"
		},
		"ls_adls_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://adlslearningcdu.dfs.core.windows.net/"
		},
		"ls_asql_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "cdu-mysqldb-server.database.windows.net"
		},
		"ls_asql_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "cdu-mysqldb"
		},
		"ls_asql_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "sqladmin"
		},
		"ls_localFile_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "E:\\"
		},
		"ls_localFile_properties_typeProperties_userId": {
			"type": "string",
			"defaultValue": "MANISH\\manish"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/pl_08SetVariableActivity')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set variable2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "x",
							"value": "Manish Kumar Rai"
						}
					},
					{
						"name": "Set variable2",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "y",
							"value": 20
						}
					},
					{
						"name": "Set variable3",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "y",
							"value": 50
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"x": {
						"type": "String",
						"defaultValue": "Manish"
					},
					"y": {
						"type": "Integer",
						"defaultValue": 26
					}
				},
				"folder": {
					"name": "ControlFlows"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_11ForEachActivity')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.Countries",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Set Country",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "ReturnCountries",
										"value": {
											"value": "@item()",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Numbers": {
						"type": "array",
						"defaultValue": [
							1,
							2
						]
					},
					"Countries": {
						"type": "array",
						"defaultValue": [
							"India",
							"UK",
							"USA"
						]
					}
				},
				"variables": {
					"return": {
						"type": "Integer"
					},
					"ReturnCountries": {
						"type": "String"
					}
				},
				"folder": {
					"name": "ControlFlows"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_15AppendVariableActivity')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.Countries",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Set variable1",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "x",
										"value": {
											"value": "@item()",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Append variable1",
									"type": "AppendVariable",
									"dependsOn": [
										{
											"activity": "Set variable1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "output",
										"value": {
											"value": "@variables('x')[0]",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Set variable2",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "x",
							"value": {
								"value": "@variables('output')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Countries": {
						"type": "array",
						"defaultValue": [
							[
								"India"
							],
							[
								"UK"
							],
							[
								"USA"
							]
						]
					}
				},
				"variables": {
					"x": {
						"type": "Array"
					},
					"output": {
						"type": "Array"
					}
				},
				"folder": {
					"name": "ControlFlows"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_22FilterActivity')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Filter1",
						"type": "Filter",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@variables('Numbers')",
								"type": "Expression"
							},
							"condition": {
								"value": "@greater(item(),3)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Filter1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "output",
							"value": {
								"value": "@activity('Filter1').output.Value",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"Numbers": {
						"type": "Array",
						"defaultValue": [
							1,
							2,
							4,
							5,
							6
						]
					},
					"output": {
						"type": "Array"
					}
				},
				"folder": {
					"name": "ControlFlows"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_23IFActivity')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(variables('x'),200)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Set result2",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "result",
										"value": "False"
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Set result1",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "result",
										"value": "True"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"x": {
						"type": "Integer",
						"defaultValue": 100
					},
					"result": {
						"type": "String"
					}
				},
				"folder": {
					"name": "ControlFlows"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_24SwitchActivity')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Switch1",
						"type": "Switch",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"on": {
								"value": "@string(variables('x'))",
								"type": "Expression"
							},
							"cases": [
								{
									"value": "1000",
									"activities": [
										{
											"name": "Case1",
											"type": "SetVariable",
											"dependsOn": [],
											"policy": {
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"variableName": "output",
												"value": "1k"
											}
										}
									]
								},
								{
									"value": "2000",
									"activities": [
										{
											"name": "Case2",
											"type": "SetVariable",
											"dependsOn": [],
											"policy": {
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"variableName": "output",
												"value": "2k"
											}
										}
									]
								},
								{
									"value": "3000",
									"activities": [
										{
											"name": "Case3",
											"type": "SetVariable",
											"dependsOn": [],
											"policy": {
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"variableName": "output",
												"value": "3k"
											}
										}
									]
								}
							],
							"defaultActivities": [
								{
									"name": "Default",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "output",
										"value": "more than 3k"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"x": {
						"type": "Integer",
						"defaultValue": 30000
					},
					"output": {
						"type": "String"
					}
				},
				"folder": {
					"name": "ControlFlows"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_31Parameters')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "y",
							"value": {
								"value": "@pipeline().parameters.x",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"x": {
						"type": "int",
						"defaultValue": 40
					}
				},
				"variables": {
					"y": {
						"type": "Integer"
					}
				},
				"folder": {
					"name": "ControlFlows"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SelfHostedIR')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_ASQLKey')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('ls_ASQLKey_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_adls')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_adls_properties_typeProperties_url')]",
					"accountKey": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "ls_ASQLKey",
							"type": "LinkedServiceReference"
						},
						"secretName": "ADLSKey",
						"secretVersion": "785fa3d9c4ae4af7b6a0571ed76c9913"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_ASQLKey')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_asql')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('ls_asql_properties_typeProperties_server')]",
					"database": "[parameters('ls_asql_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('ls_asql_properties_typeProperties_userName')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "ls_ASQLKey",
							"type": "LinkedServiceReference"
						},
						"secretName": "sqlKey",
						"secretVersion": "302bae40f620404e9f84063448aae446"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_ASQLKey')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_localFile')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "FileServer",
				"typeProperties": {
					"host": "[parameters('ls_localFile_properties_typeProperties_host')]",
					"userId": "[parameters('ls_localFile_properties_typeProperties_userId')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('ls_localFile_password')]"
					}
				},
				"connectVia": {
					"referenceName": "SelfHostedIR",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/SelfHostedIR')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_20StoredProcedureActivity')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Stored procedure1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_truncateAndload]"
						},
						"linkedServiceName": {
							"referenceName": "ls_asql",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "ControlFlows"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_asql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_25ScriptActivity')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Script1",
						"type": "Script",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "ls_asql",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "CREATE TABLE dbo.Demo(\nid int,\nname varchar(20)\n)"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "ControlFlows"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_asql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/de_delete')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Join.xlsx",
						"folderPath": "Data",
						"fileSystem": "mycontainer"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_OrdersNew')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "OrdersNew.csv",
						"fileSystem": "mycontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "OrderDate",
						"type": "String"
					},
					{
						"name": "ProductKey",
						"type": "String"
					},
					{
						"name": "Country",
						"type": "String"
					},
					{
						"name": "EnglishProductName",
						"type": "String"
					},
					{
						"name": "SalesAmount",
						"type": "String"
					},
					{
						"name": "TaxAmt",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_Stringify62')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Stringify.csv",
						"folderPath": "62",
						"fileSystem": "mycontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_asqConditionSplitFrance')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_asql",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "tblFrance"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_asql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_asql')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_asql",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "YearWise"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_asql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_asqlAggregate')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_asql",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "tblAgg"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_asql')]"
			]
		}
	]
}